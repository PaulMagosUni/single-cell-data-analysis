# COTAN analysis

```{r eval=TRUE, include=TRUE}
library(COTAN)
library(zeallot)
library(ggplot2)
library(factoextra)
library(qpdf)

source("./libraries/utils.R")
```

```{r}
dataset_name = 'tabula-muris-marrow_P7_3'
dataset_path = './dataset/'

outDir = paste('./tools/COTAN/', dataset_name, sep="")
dir.create(outDir, showWarnings = FALSE, recursive = TRUE)

IN_DATA_DIR = paste(dataset_path, dataset_name, '-filtered/', sep="")
IN_LABEL_DIR = paste(dataset_path, dataset_name, '-filtered/', sep="")
```

```{r}
data <- Read10X(paste(IN_DATA_DIR, '10X', sep=''))
```

```{r}
obj = COTAN(raw = data)
setLoggingFile(paste(outDir, '/', dataset_name, '.log', sep = ""))
obj = initializeMetaDataset(obj,
                            GEO = "-",
                            sequencingMethod = "10x",
                            sampleCondition = dataset_name)

```

```{r}
ECDPlot(obj, yCut = 700)

```

```{r}
cellSizePlot(obj)
```

```{r}
obj <- clean(obj, cellsCutoff=0)
c(pcaCellsPlot, pcaCellsData, genesPlot, UDEPlot, nuPlot) %<-% cleanPlots(obj)
pcaCellsPlot 
```

```{r}
genesPlot
```

```{r}
UDEPlot
```

```{r}
obj = estimateDispersionBisection(obj, cores = 8)

```

```{r}
file_pos = paste(outDir, '/', dataset_name, '.cotan.RDS', sep = "")
```

```{r}
if (file.exists(file_pos)){
    obj <- readRDS(file.path(file_pos))
} else {
    obj <- calculateCoex(obj, actOnCells = TRUE)
    saveRDS(obj, file = file.path(file_pos))
}
```

## Clustering

```{r eval=FALSE, include=TRUE}
if (file.exists(file.path(outDir, '/', "fineClusters.RDS"))){
    fineClusters <- readRDS(file.path(outDir, '/', "fineClusters.RDS"))
} else {
    print("Computing clusters")
    start <- Sys.time()
    fineClusters <- cellsUniformClustering(obj, GDIThreshold = 2.3, cores = 8,
                                  saveObj = TRUE, outDir = outDir)
    print(Sys.time() - start)
    saveRDS(fineClusters, file.path(outDir, '/', "fineClusters.RDS"))
}
```


```{r}
obj <- addClusterization(obj, clName = "FineClusters", clusters = fineClusters)
```

```{r eval=FALSE, include=TRUE}
c(coexDF, pValueDF) %<-% DEAOnClusters(obj, clusters = fineClusters)
obj <- addClusterizationCoex(obj, clName = "FineClusters",
                             coexDF = coexDF)
```

```{r eval=FALSE, include=TRUE}
if (file.exists(file.path(outDir, '/', "mergedClusters.RDS")) ||
    file.exists(file.path(outDir, '/', "mergedCoex.RDS")) || 
    file.exists(file.path(outDir, '/', "mergedpValues.RDS"))){
        
    mergedClusters <- readRDS(file.path(outDir, '/', "mergedClusters.RDS"))
    coexDF <- readRDS(file.path(outDir, '/', "mergedCoex.RDS"))
    pValueDF <- readRDS(file.path(outDir, '/', "mergedpValues.RDS"))

} else {
    c(mergedClusters, coexDF, pValueDF) %<-%
      mergeUniformCellsClusters(obj, clusters=fineClusters, GDIThreshold = 1.95, cores = 4, outDir = outDir)
    saveRDS(mergedClusters, file.path(outDir, '/', "mergedClusters.RDS"))
    saveRDS(coexDF, file.path(outDir, '/', "mergedCoex.RDS"))
    saveRDS(pValueDF, file.path(outDir, '/', "mergedpValues.RDS"))
}
```

```{r eval=FALSE, include=TRUE}
cluster = as.data.frame(mergedClusters)
colnames(cluster)[colnames(cluster) == deparse(substitute(mergedClusters))] <- "cluster"
cluster$cluster = match(cluster$cluster, levels(mergedClusters))
cluster$cell = rownames(cluster)
rownames(cluster) = c(1:nrow(cluster))
```

```{r}
OUT_RES_DIR = paste('./results/', dataset_name, '/COTAN', sep="")
if (!dir.exists(OUT_RES_DIR)){
    dir.create(OUT_RES_DIR, recursive = TRUE)
}

write_COTAN_markers = function(OUT_RES_DIR, clusters, pValues, TOP_MARKER_NUM) {
    markers = data.frame()

    for (cluster_id in (levels(clusters))) {
        cluster_markers = data.frame()
        pv = pValues[, cluster_id]
        names(pv) = rownames(pValues)
        sorted_pv = sort(pv, decreasing = FALSE)
        cluster_markers = data.frame(gene = names(sorted_pv)[1:TOP_MARKER_NUM],
                                    cluster = match(cluster_id, levels(clusters)),
                                    rank = 1:TOP_MARKER_NUM)

        markers = rbind(markers, cluster_markers)
    }
    colnames(markers) = c("gene","cluster","rank")

    write.csv(markers, paste(OUT_RES_DIR, "/markers.csv", sep=""), row.names = FALSE)
}

write_clustering(OUT_RES_DIR, cluster, "cell", "cluster")

TOP_MARKER_NUM = 50

write_COTAN_markers(OUT_RES_DIR, mergedClusters, pValueDF, TOP_MARKER_NUM)

```

```{r}
library(scater)
library(scran)

srat = CreateSeuratObject(counts = obj@raw, project = dataset_name)

# Show clusters in Genes data
gdsce = as.SingleCellExperiment(srat)
gdsce <- applySCE(gdsce, logNormCounts)
gdumap = runUMAP(gdsce)
colLabels(gdumap) <- factor(mergedClusters)
plotUMAP(gdumap, colour_by="label", text_by="label", text_color="red")
```

